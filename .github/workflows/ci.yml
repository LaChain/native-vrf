name: CI

on:
  push:
    branches: ["develop", "main"]
  pull_request:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    container: node:20-buster
    steps:
      - uses: actions/checkout@v3
      - name: Cache npm
        uses: actions/cache@v3
        with:
          path: |
            ~/cache
            !~/cache/exclude
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
      # Install deps
      - name: Install deps
        run: npm ci
      # Run linter
      - name: Run linter
        run: npm run lint:check
      # Run Prettier
      - name: Run prettier
        run: npm run format:check

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
      - name: Cache npm
        uses: actions/cache@v3
        with:
          path: |
            ~/cache
            !~/cache/exclude
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
      # Install deps
      - name: Install deps
        run: npm ci
      # run tests
      - name: Run Test
        run: npm run test

  slither:
    image: python:3.11
    stage: security
    before_script:
      - curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash
      - export NVM_DIR="$HOME/.nvm" && . "$NVM_DIR/nvm.sh" --no-use
      - nvm install 20 && nvm use 20
      - npm install
      - pip3 install slither-analyzer
      - pip3 install solc-select
      - solc-select install 0.8.4
      - solc-select use 0.8.4
    script:
      - slither . --filter-paths "node_modules" --disable-color --print human-summary
